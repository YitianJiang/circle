<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.acircle.circle</groupId>
    <artifactId>circle</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>common</module>
        <module>mbg</module>
        <module>main</module>
        <module>auth</module>
        <module>gateway</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <skipTests>true</skipTests>
        <docker.host>http://10.0.0.201:2375</docker.host>
        <docker.maven.plugin.version>1.2.2</docker.maven.plugin.version>


        <mybatis-generator.version>1.4.0</mybatis-generator.version>
        <mybatis.version>3.5.5</mybatis.version>
        <pagehelper-starter.version>1.3.0</pagehelper-starter.version>
        <pagehelper.version>5.2.0</pagehelper.version>
        <mysql-connector.version>8.0.20</mysql-connector.version>
        <druid.version>1.1.23</druid.version>
        <spring-data-commons.version>2.3.0.RELEASE</spring-data-commons.version>

        <spring-cloud.version>Hoxton.SR5</spring-cloud.version>
        <spring-cloud-alibaba.version>2.2.0.RELEASE</spring-cloud-alibaba.version>
        <dubbo.version>1.0.0</dubbo.version>
        <leaf-api.version>1.0.1</leaf-api.version>
        <hutool.version>5.4.0</hutool.version>
        <jjwt.version>0.9.0</jjwt.version>
        <nimbus-jose-jwt.version>8.16</nimbus-jose-jwt.version>
        <admin-starter-server.version>2.2.3</admin-starter-server.version>
        <log4j-over-slf4j.version>1.7.25</log4j-over-slf4j.version>
        <logstash-logback.version>5.3</logstash-logback.version>
        <knife4j.version>2.0.4</knife4j.version>

        <circle-common.version>1.0.0-SNAPSHOT</circle-common.version>
        <circle-mbg.version>1.0.0-SNAPSHOT</circle-mbg.version>

        <docker-image-repository-address>registry.cn-hangzhou.aliyuncs.com/jiangyitian/aliyun-docker-image-registry</docker-image-repository-address>

    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>


    <dependencyManagement>
        <dependencies>
            <!--circle通用模块-->
            <dependency>
                <groupId>com.acircle.circle</groupId>
                <artifactId>common</artifactId>
                <version>${circle-common.version}</version>
            </dependency>
            <!--circle中MBG生成模块-->
            <dependency>
                <groupId>com.acircle.circle</groupId>
                <artifactId>mbg</artifactId>
                <version>${circle-mbg.version}</version>
            </dependency>

            <!--Spring Cloud 相关依赖-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--Spring Cloud Alibaba 相关依赖-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--Hutool Java工具包-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!--Knife4j API文档生产工具-->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-micro-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

            <!-- MyBatis 生成器 -->
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis-generator.version}</version>
            </dependency>
            <!-- MyBatis-->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <!--MyBatis分页插件starter-->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-starter.version}</version>
            </dependency>
            <!--MyBatis分页插件-->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <!--集成druid连接池-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!--Mysql数据库驱动-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
            </dependency>
            <!--SpringData工具包-->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-commons</artifactId>
                <version>${spring-data-commons.version}</version>
            </dependency>

            <!--JWT(Json Web Token)登录支持-->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <!--JWT(Json Web Token)登录支持-->
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbus-jose-jwt.version}</version>
            </dependency>
            <!-- 阿里云OSS -->
            <!--<dependency>-->
            <!--<groupId>com.aliyun.oss</groupId>-->
            <!--<artifactId>aliyun-sdk-oss</artifactId>-->
            <!--<version>${aliyun-oss.version}</version>-->
            <!--</dependency>-->
            <!--集成logstash-->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback.version}</version>
            </dependency>
            <!--集成SpringBoot Admin监控-->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${admin-starter-server.version}</version>
            </dependency>
            <!--MinIO JAVA SDK-->
            <!--<dependency>-->
            <!--<groupId>io.minio</groupId>-->
            <!--<artifactId>minio</artifactId>-->
            <!--<version>${minio.version}</version>-->
            <!--</dependency>-->

            <!--dubbo-->
            <dependency>
                <groupId>io.dubbo.springboot</groupId>
                <artifactId>spring-boot-starter-dubbo</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <!--leaf-api-->
            <dependency>
                <groupId>com.sankuai.inf.leaf</groupId>
                <artifactId>api</artifactId>
                <version>${leaf-api.version}</version>
            </dependency>
            <!--log4j-over-slf4j-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${log4j-over-slf4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <!--加入下面两项配置-->
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <includeSystemScope>true</includeSystemScope>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>1.1.0</version>
                    <executions>
                        <execution>
                            <id>build-image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>push-image</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                            <configuration>
                                <imageName>${docker-image-repository-address}:circle-${project.artifactId}-${project.version}</imageName>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <serverId>aliyun-docker-image-registry</serverId>
                        <registryUrl>registry.cn-hangzhou.aliyuncs.com</registryUrl>
                        <pushImage>true</pushImage>
                        <imageName>${docker-image-repository-address}:circle-${project.artifactId}-${project.version}</imageName>
                        <dockerHost>http://10.0.0.201:2375</dockerHost>
                        <baseImage>java:8</baseImage>
                        <entryPoint>["java", "-jar","/${project.build.finalName}.jar"]</entryPoint>
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>